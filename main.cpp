#include "bellman.h"
#include "tsm.h"

int main() {
  // Read data from the file into matrix G
  int G[20][20];
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  fstream fin;
  fin.open("inMat1.txt");
  int n = 20;
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++) {
      fin >> G[i][j];
    }
  }
  // Or we can declare the matrix G directly
  int G1[20][20] = {
     {1, 33, 1, 15, 5, 3, 5, 20, 30, 50, 67, 80, 90, 95, 25, 16, 8, 11, 19, 100},
        {2, 4, 36, 25, 45, 5, 10, 26, 38, 51, 68, 82, 91, 96, 27, 18, 9, 12, 20, 99},
        {3, 5, 37, 26, 46, 6, 11, 28, 40, 53, 70, 84, 92, 97, 29, 19, 10, 13, 21, 98},
        {4, 6, 38, 27, 47, 7, 12, 30, 42, 55, 72, 86, 93, 98, 31, 20, 11, 14, 22, 97},
        {5, 7, 39, 28, 48, 8, 13, 32, 44, 57, 74, 88, 94, 99, 33, 21, 12, 15, 23, 96},
        {6, 8, 40, 29, 49, 9, 14, 34, 46, 59, 76, 90, 95, 100, 35, 22, 13, 16, 24, 95},
        {7, 9, 41, 30, 50, 10, 15, 36, 48, 61, 78, 92, 96, 100, 37, 23, 14, 17, 25, 94},
        {8, 10, 42, 31, 51, 11, 16, 38, 50, 63, 80, 94, 97, 100, 39, 24, 15, 18, 26, 93},
        {9, 11, 43, 32, 52, 12, 17, 40, 52, 65, 82, 96, 98, 100, 41, 25, 16, 19, 27, 92},
        {10, 12, 44, 33, 53, 13, 18, 42, 54, 67, 84, 98, 99, 100, 43, 26, 17, 20, 28, 91},
        {11, 13, 45, 34, 54, 14, 19, 44, 56, 69, 86, 99, 100, 100, 45, 27, 18, 21, 29, 90},
        {12, 14, 46, 35, 55, 15, 20, 46, 58, 71, 88, 100, 100, 100, 47, 28, 19, 22, 30, 89},
        {13, 15, 47, 36, 56, 16, 21, 48, 60, 73, 90, 100, 100, 100, 49, 29, 20, 23, 31, 88},
        {14, 16, 48, 37, 57, 17, 22, 50, 62, 75, 92, 100, 100, 100, 51, 30, 21, 24, 32, 87},
        {15, 17, 49, 38, 58, 18, 23, 52, 64, 77, 94, 100, 100, 100, 53, 31, 22, 25, 33, 86},
        {16, 18, 50, 39, 59, 19, 24, 54, 66, 79, 96, 100, 100, 100, 55, 32, 23, 26, 34, 85},
        {17, 19, 51, 40, 60, 20, 25, 56, 68, 81, 98, 100, 100, 100, 57, 33, 24, 27, 35, 84},
        {18, 20, 52, 41, 61, 21, 26, 58, 70, 83, 100, 100, 100, 100, 59, 34, 25, 28, 36, 83},
        {19, 21, 53, 42, 62, 22, 27, 60, 72, 85, 100, 100, 100, 100, 61, 35, 26, 29, 37, 82},
        {20, 22, 54, 43, 63, 23, 28, 62, 74, 87, 100, 100, 100, 100, 63, 36, 27, 30, 38, 81}
      };
  //----------------------------------------------------------------
  // Test for BF()
  int* Value = new int[n];
  int* Previous = new int[n];
  setPreVal(n, Value, Previous);
  for (int i = 0; i < n; i++) {
    BF(G, n, 'A', Value, Previous);
    for (int i = 0; i < n; i++) {
      cout << Value[i] << " ";
    }
    cout << endl;
    for (int i = 0; i < n; i++) {
      cout << Previous[i] << " ";
    }
    cout << endl;
  }
  delete[] Value;
  delete[] Previous;

  //----------------------------------------------------------------
  // Test for BFPath()};
  cout << "Graph:" << endl;
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++) {
      cout << BF_Path(G, n, char(i + 'A'), char(j + 'A')) << endl;
    }
  }

  //----------------------------------------------------------------
  // Test for Traveling
  clock_t begin = clock();
  string output = Traveling(G1, n, 'A');
  double partile = 0.1;
  int cost = resLength(G1, n, output);
  if ((204 - 204 * partile) <= cost && cost <= (204 + 204 * partile)) {
    cout << "your output is at least 90% correct" << '\n';
  }
  cout << output << endl;
  cout << "Cost: " << cost << '\n';

  clock_t end = clock();

  // Count the time for execute the tsm.cpp
  cout << "Time run: " << double((float)(end - begin) / CLOCKS_PER_SEC) << " s" << '\n';
  return 0;
}
//*======================================================================*//
